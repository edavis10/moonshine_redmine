<VirtualHost <%= svn_ip_address %>:<%= svn_ssl? ? '443' : '80' %>>

  <% if svn_ssl? %>
  SSLEngine on
  SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
  SSLCertificateFile    <%= configuration[:redmine][:repository_management][:certificate_file] || configuration[:ssl][:certificate_file] || '/etc/ssl/certs/ssl-cert-snakeoil.pem' %>
  SSLCertificateKeyFile <%= configuration[:redmine][:repository_management][:certificate_key_file] || configuration[:ssl][:certificate_key_file] || '/etc/ssl/private/ssl-cert-snakeoil.key' %>
  <% if configuration[:redmine][:repository_management][:certificate_chain_file] || configuration[:ssl][:certificate_chain_file] %>
  SSLCertificateChainFile <%= configuration[:redmine][:repository_management][:certificate_chain_file] || configuration[:ssl][:certificate_chain_file] %>
  <% else %>
  # SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt
  <% end %>
  <% end %>

  ServerName <%= svn_host %>

  DocumentRoot /srv/<%= svn_host %>
  <Directory /srv/<%= svn_host %>>
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
    <% if svn_ssl? %>
    SSLRequireSSL
    <% end %>
  </Directory>

  RailsAutoDetect off

  # Redmine Subversion Access
  PerlLoadModule Apache::Redmine
  <Location /svn>
    DAV svn
    SVNParentPath "<%= svn_dir %>" 
    Order deny,allow
    Deny from all
    Satisfy any
    <% if svn_ssl? %>
    SSLRequireSSL
    <% end %>

    PerlAccessHandler Apache::Authn::Redmine::access_handler
    PerlAuthenHandler Apache::Authn::Redmine::authen_handler
    AuthType Basic
    AuthName "SVN Repository" 

    #read-only access    
    <Limit GET PROPFIND OPTIONS REPORT>
       Require valid-user
       Allow from <%= Facter.to_hash['ipaddress'] %>
       Allow from <%= svn_ip_address %>
       # Allow from another-ip
       Satisfy any
    </Limit>
    # write access
    <LimitExcept GET PROPFIND OPTIONS REPORT>
      Require valid-user
    </LimitExcept>

    ## for mysql
    RedmineDSN "DBI:mysql:database=<%= configuration[:database][ENV['RAILS_ENV']][:database] %>;host=<%= configuration[:database][ENV['RAILS_ENV']][:host]%>" 
    ## for postgres
    # RedmineDSN "DBI:Pg:dbname=databasename;host=my.db.server" 
    ## for SQLite3
    # RedmineDSN "DBI:SQLite:dbname=database.db" 

    RedmineDbUser "<%= configuration[:database][ENV['RAILS_ENV']][:username]%>"
    RedmineDbPass "<%= configuration[:database][ENV['RAILS_ENV']][:password]%>"
  </Location>

</VirtualHost>

