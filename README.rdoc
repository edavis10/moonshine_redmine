A moonshine plugin to setup Redmine (Redmine.org).

== Configure Email

Configure your email settings in moonshine.yml like:

  :redmine_email_yml:
    :production:
      :delivery_method: :async_sendmail

Then include the recipe in your application_manifest.rb

  recipe :redmine_email_yml

== Run Plugin Migrations

Include the recipe in your application_manifest.rb

  recipe :redmine_plugin_migrations

== Install SCM tools

Include any or all of the following recipes in your
application_manifest.rb to install the SCM client tools:

  recipe :redmine_subversion_client
  recipe :redmine_git_client

== Schedule a cronjob to fetch SCM changesets

To fetch SCM changesets in the background, add the recipe:

  recipe :redmine_fetch_changesets

Then configure the fetching time in moonshine.yml. All fields default to
'*' so make sure to set something (or it will run every minute)

  :redmine:
    :fetch_changesets:
      :minute: '*/10'
      :hour:   '*'
      :month:  '*

== Schedule fetching incoming email via IMAP

Sets up the cronjob to receive incoming mail via IMAP. Add the recipe:

  recipe :redmine_receive_imap

Then configure the time and account in moonshine.yml. All fields default to
'*' so make sure to set something (or it will run every minute)

  :redmine:
    :receive_imap
      :host: 'imap.example.com'
      :username: 'redmine@example.com'
      :password: 'littlestreamsoftware'
      :minute: '0'
      :hour:   '*'
      :month:  '*'

== Schedule cache updates for the Redmine Rate plugin

The Redmine Rate plugin uses caches to speed up calculations.  It includes
two rake tasks:

* Update will only update caches that don't have a value
* Refresh will clear and update all caches (i.e. purge and re-calculate)

To schedule either or both, include the following recipes:

  recipe :redmine_rate_cache_update
  recipe :redmine_rate_cache_refresh

Then configure the fetching time in moonshine.yml. All fields default to
'*' so make sure to set something (or it will run every minute)

  :redmine:
    :redmine_rate:
      :update_cost_cache:
        :minute: '*/10'
        :hour:   '*'
        :month:  '*'
      :refresh_cost_cache:
        :minute: '10'
        :hour:   '0'
        :month:  '*'

== Redmine SVN Repository Management

To configure the Advanced SVN repository management, add the following config
to your moonshine.yml

  :redmine:
    :repository_management:
      :svn_directory: '/var/svn'
      :svn_host: 'svn.example.com' # Needs to be separate from your Redmine domain
      :svn_path: '/svn/' # https://svn.example/svn/
      :svn_ssl: true # Or false to disable SSL
      :svn_ip_address: '1.1.1.1' # SSL requires a separate ip address
      # Only required on SSL setups. Will default to the main SSL certificate.
      :certificate_file: /home/redmine/certs/svn.example.com.crt
      :certificate_key_file: /home/redmine/certs/svn.example.com.key
      :certificate_chain_file: /home/redmine/certs/gd_bundle.crt

Once this is done, you need to add the following recipe to your application_manifest.rb.

  recipe :redmine_advanced_svn_integration

Optionally: the :redmine_advanced_svn_integration recipe sets up both repository
creation (reposman.rb) and access control (Redmine.pm).  If you only want one or
the other, you can use either of these sub recipes:

    recipe :redmine_repository_management
    recipe :redmine_repository_access_control

